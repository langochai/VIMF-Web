// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using BMS.Models;
using Microsoft.EntityFrameworkCore;

namespace BMS.Data;

public partial class RTCStockManagementContext : DbContext
{
    public RTCStockManagementContext(DbContextOptions<RTCStockManagementContext> options)
        : base(options)
    {
    }

    public virtual DbSet<AgvWork> AgvWorks { get; set; }

    public virtual DbSet<Area> Areas { get; set; }

    public virtual DbSet<Employee> Employees { get; set; }

    public virtual DbSet<ExportSerialNumber> ExportSerialNumbers { get; set; }

    public virtual DbSet<ExportWarehouse> ExportWarehouses { get; set; }

    public virtual DbSet<ExportWarehouseDetail> ExportWarehouseDetails { get; set; }

    public virtual DbSet<Factory> Factories { get; set; }

    public virtual DbSet<ImportSerialNumber> ImportSerialNumbers { get; set; }

    public virtual DbSet<ImportWarehouse> ImportWarehouses { get; set; }

    public virtual DbSet<ImportWarehouseDetail> ImportWarehouseDetails { get; set; }

    public virtual DbSet<Material> Materials { get; set; }

    public virtual DbSet<Position> Positions { get; set; }

    public virtual DbSet<Unit> Units { get; set; }

    public virtual DbSet<Warehouse> Warehouses { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<AgvWork>(entity =>
        {
            entity.ToTable("AgvWork");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.AgvWork1).HasColumnName("AgvWork");
            entity.Property(e => e.DateRun).HasColumnType("datetime");
        });

        modelBuilder.Entity<Area>(entity =>
        {
            entity.ToTable("Area");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.AreaCode)
                .HasMaxLength(150)
                .IsUnicode(false);
            entity.Property(e => e.AreaName).HasMaxLength(150);
            entity.Property(e => e.WarehouseId).HasColumnName("WarehouseID");
        });

        modelBuilder.Entity<Employee>(entity =>
        {
            entity.ToTable("Employee");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.EmployeeCode)
                .HasMaxLength(150)
                .IsUnicode(false);
        });

        modelBuilder.Entity<ExportSerialNumber>(entity =>
        {
            entity.ToTable("ExportSerialNumber");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.ExportWarehouseDetailId).HasColumnName("ExportWarehouseDetailID");
            entity.Property(e => e.MaterialId).HasColumnName("MaterialID");
            entity.Property(e => e.SerialNumber).HasMaxLength(150);
        });

        modelBuilder.Entity<ExportWarehouse>(entity =>
        {
            entity.ToTable("ExportWarehouse", tb => tb.HasTrigger("tr_Listener_2"));

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreateDatePriority).HasColumnType("datetime");
            entity.Property(e => e.CreatedBy).HasMaxLength(100);
            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.EmployeeId).HasColumnName("EmployeeID");
            entity.Property(e => e.ExportCode)
                .HasMaxLength(150)
                .IsUnicode(false);
            entity.Property(e => e.ExportWarehouseDate).HasColumnType("datetime");
            entity.Property(e => e.Stt).HasColumnName("STT");
            entity.Property(e => e.UpdatedBy).HasMaxLength(100);
            entity.Property(e => e.UpdatedDate).HasColumnType("datetime");
            entity.Property(e => e.WarehouseId).HasColumnName("WarehouseID");
        });

        modelBuilder.Entity<ExportWarehouseDetail>(entity =>
        {
            entity.ToTable("ExportWarehouseDetail");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.ExportWarehouseId).HasColumnName("ExportWarehouseID");
            entity.Property(e => e.MaterialId).HasColumnName("MaterialID");
            entity.Property(e => e.PositionId).HasColumnName("PositionID");
            entity.Property(e => e.RequestDate).HasColumnType("datetime");
            entity.Property(e => e.Stt).HasColumnName("STT");
        });

        modelBuilder.Entity<Factory>(entity =>
        {
            entity.ToTable("Factory");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy).HasMaxLength(100);
            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.FactoryCode)
                .HasMaxLength(150)
                .IsUnicode(false);
            entity.Property(e => e.UpdatedBy).HasMaxLength(100);
            entity.Property(e => e.UpdatedDate).HasColumnType("datetime");
        });

        modelBuilder.Entity<ImportSerialNumber>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_IMportSerialNumber");

            entity.ToTable("ImportSerialNumber");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.ImportWarehouseDetailId).HasColumnName("ImportWarehouseDetailID");
            entity.Property(e => e.MaterialId).HasColumnName("MaterialID");
            entity.Property(e => e.SerialNumber).HasMaxLength(150);
        });

        modelBuilder.Entity<ImportWarehouse>(entity =>
        {
            entity.ToTable("ImportWarehouse", tb => tb.HasTrigger("tr_Listener_1"));

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy).HasMaxLength(100);
            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.EmployeeId).HasColumnName("EmployeeID");
            entity.Property(e => e.ExportWarehouseId).HasColumnName("ExportWarehouseID");
            entity.Property(e => e.ImportCode)
                .HasMaxLength(150)
                .IsUnicode(false);
            entity.Property(e => e.ImportWarehouseDate).HasColumnType("datetime");
            entity.Property(e => e.Stt).HasColumnName("STT");
            entity.Property(e => e.UpdatedBy).HasMaxLength(100);
            entity.Property(e => e.UpdatedDate).HasColumnType("datetime");
            entity.Property(e => e.WarehouseId).HasColumnName("WarehouseID");
        });

        modelBuilder.Entity<ImportWarehouseDetail>(entity =>
        {
            entity.ToTable("ImportWarehouseDetail");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.ImportWarehouseId).HasColumnName("ImportWarehouseID");
            entity.Property(e => e.MaterialId).HasColumnName("MaterialID");
            entity.Property(e => e.PositionId).HasColumnName("PositionID");
            entity.Property(e => e.RequestDate).HasColumnType("datetime");
            entity.Property(e => e.StatusAgv).HasColumnName("StatusAGV");
            entity.Property(e => e.Stt).HasColumnName("STT");
        });

        modelBuilder.Entity<Material>(entity =>
        {
            entity.ToTable("Material");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy).HasMaxLength(100);
            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.MaterialCode)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.MaterialName).HasMaxLength(150);
            entity.Property(e => e.Note).HasMaxLength(250);
            entity.Property(e => e.PositionId).HasColumnName("PositionID");
            entity.Property(e => e.Stt).HasColumnName("STT");
            entity.Property(e => e.UnitId).HasColumnName("UnitID");
            entity.Property(e => e.UpdatedBy).HasMaxLength(100);
            entity.Property(e => e.UpdatedDate).HasColumnType("datetime");
            entity.Property(e => e.WarehouseId).HasColumnName("WarehouseID");
        });

        modelBuilder.Entity<Position>(entity =>
        {
            entity.ToTable("Position");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.AreaId).HasColumnName("AreaID");
            entity.Property(e => e.PositionCode)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PositionName).HasMaxLength(50);
        });

        modelBuilder.Entity<Unit>(entity =>
        {
            entity.ToTable("Unit");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.UnitCode)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.UnitName).HasMaxLength(150);
        });

        modelBuilder.Entity<Warehouse>(entity =>
        {
            entity.ToTable("Warehouse");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.FactoryId).HasColumnName("FactoryID");
            entity.Property(e => e.WarehouseCode)
                .HasMaxLength(150)
                .IsUnicode(false);
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}